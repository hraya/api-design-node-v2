{"version":3,"file":"58d6c355fbc7f94d64aab590c5a030a8-output.js","sources":["webpack/bootstrap 676ac8b13a890b318ce2","src/api/resources/user/user.model.js","external \"mongoose\"","external \"express\"","src/api/modules/query.js","external \"babel-runtime/core-js/promise\"","external \"babel-runtime/regenerator\"","external \"babel-runtime/helpers/asyncToGenerator\"","src/api/resources/playlist/playlist.model.js","src/api/resources/song/song.model.js","test/apiSpecs.js","external \"chai\"","test/helpers.js","src/api/modules/auth.js",".tmp/mocha-webpack/58d6c355fbc7f94d64aab590c5a030a8-entry.js","/Users/bronx/Desktop/NodePractice/api-design-node-v2/src [object Object]","src/api/modules/query.spec.js","external \"babel-runtime/helpers/extends\"","external \"lodash.merge\"","src/api/resources/playlist/playlist.spec.js","external \"chai-http\"","src/server.js","src/middleware.js","external \"body-parser\"","src/api/index.js","src/api/restRouter.js","src/api/resources/user/index.js","src/api/resources/user/user.restRouter.js","src/api/resources/user/user.controller.js","src/api/resources/song/index.js","src/api/resources/song/song.restRouter.js","src/api/resources/song/song.controller.js","src/api/resources/playlist/index.js","src/api/resources/playlist/playlist.restRouter.js","src/api/resources/playlist/playlist.controller.js","src/api/modules/errorHandler.js","src/db.js","external \"jsonwebtoken\"","external \"express-jwt\"","src/api/resources/song/song.spec.js","src/api/resources/user/user.spec.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 676ac8b13a890b318ce2","import mongoose from 'mongoose'\n\nconst userSchema = new mongoose.Schema({\n  username: {\n    type: String,\n    unique: true,\n    required: true\n  },\n  passwordHash: {\n    required: true,\n    type: String,\n  }\n}, {timestamps: true})\n\nuserSchema.methods = {\n  authenticate(plaintTextPassword) {\n    return bcrypt.compareSync(plainTextPword, this.password)\n  },\n  hashPassword(plaintTextPassword) {\n    if (!plaintTextPassword) {\n      throw new Error('Could not save user')\n    }\n\n    const salt = bcrypt.genSaltSync(10)\n    return bcrypt.hashSync(plaintTextPassword, salt)\n  }\n}\n\nexport const User = mongoose.model('user', userSchema)\n\n\n\n// WEBPACK FOOTER //\n// src/api/resources/user/user.model.js","module.exports = require(\"mongoose\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongoose\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 2\n// module chunks = 0","import merge from 'lodash.merge'\nconst testData = {message: 'hello'}\n\n// These are generic methods used in the generic controllers for all models\nexport const controllers = {\n  createOne(model, body) {\n    return model.create(body)\n  },\n\n  updateOne(docToUpdate, update) {\n    merge(docToUpdate, update)\n    return docToUpdate.save()\n  },\n\n  deleteOne(docToDelete) {\n    return docToDelete.remove()\n  },\n\n  getOne(docToGet) {\n    return Promise.resolve(docToGet )\n  },\n\n  getAll(model) {\n    return model.find({}).exec()\n  },\n\n  findByParam(model, id) {\n    return model.findById(id).exec()\n  }\n}\n\nexport const createOne = (model) => (req, res, next) => {\n  return controllers.createOne(model, req.body)\n    .then(doc => res.status(201).json(doc))\n    .catch(error => next(error))\n}\n\nexport const updateOne = (model) => async (req, res, next) => {\n  const docToUpdate = req.docFromId\n  const update = req.body\n\n  return controllers.updateOne(docToUpdate, update)\n    .then(doc => res.status(201).json(doc))\n    .catch(error => next(error))\n}\n\nexport const deleteOne = (model) => (req, res, next) => {\n  return controllers.deleteOne(req.docFromId)\n    .then(doc => res.status(201).json(doc))\n    .catch(error => next(error))\n}\n\nexport const getOne = (model) => (req, res, next) => {\n  return controllers.getOne(req.docToUpdate)\n    .then(doc => res.status(200).json(doc))\n    .catch(error => next(error))\n}\n\nexport const getAll = (model) => (req, res, next) => {\n  return controllers.getAll(model)\n    .then(docs => res.json(docs))\n    .catch(error => next(error))\n}\n\nexport const findByParam = (model) => (req, res, next, id) => {\n  return controllers.findByParam(model, id)\n    .then(doc => {\n      if (!doc) {\n        next(new Error('Not Found Error'))\n      } else {\n        req.docFromId\n        next()\n      }\n    })\n    .catch(error => {\n      next(error)\n    })\n}\n\n\nexport const generateControllers = (model, overrides = {}) => {\n  const defaults = {\n    findByParam: findByParam(model),\n    getAll: getAll(model),\n    getOne: getOne(model),\n    deleteOne: deleteOne(model),\n    updateOne: updateOne(model),\n    createOne: createOne(model)\n  }\n\n  return {...defaults, ...overrides}\n}\n\n\n\n\n// Lecture notes\n//Model level\n//find\n// const song = await Song.findById(id).exec()\n// Song.findOne({name:'thisname'}).exec()\n\n//create\n// const song = new Song({})\n// Song.create({})\n\n// update\n// Song.findOneAndUpdate({name: 'Thisname'}, {name: 'othername'}, { new: true})\n// Song.findByIdAndUpdate(same as above)\n\n// document level\n// song.name = 'new name'\n// const newSong = await song.save() // returns a promise\n// song.remove()\n// song.populate()\n\n\n// WEBPACK FOOTER //\n// src/api/modules/query.js","module.exports = require(\"babel-runtime/core-js/promise\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/core-js/promise\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"babel-runtime/regenerator\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/regenerator\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"babel-runtime/helpers/asyncToGenerator\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/helpers/asyncToGenerator\"\n// module id = 6\n// module chunks = 0","import mongoose from 'mongoose'\n\nconst playlistSchema = new mongoose.Schema({\n  title: {\n    type: String,\n    required: [true, 'Playlist must have title']\n  },\n\n  songs: [{\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'song'\n  }],\n\n  favorite: {\n    type: Boolean,\n    required: true,\n    default: false\n  }\n})\n\nexport const Playlist = mongoose.model('playlist', playlistSchema)\n\n\n\n// WEBPACK FOOTER //\n// src/api/resources/playlist/playlist.model.js","import mongoose from 'mongoose'\n\nconst songSchema = new mongoose.Schema({\n  title: {\n    type: String,\n    required: [true, 'Song must have a title']\n  },\n\n  url: {\n    type: String,\n    unique: true,\n    required: [true, 'Song must have a url']\n  },\n\n  album: String,\n\n  artist: String,\n\n  rating: {\n    type: Number,\n    min: 0,\n    max: 5,\n    default: 0\n  },\n\n  favorite: {\n    type: Boolean,\n    required: true,\n    default: false\n  }\n})\n\nexport const Song = mongoose.model('song', songSchema)\n\n\n\n// WEBPACK FOOTER //\n// src/api/resources/song/song.model.js","import chai, { expect } from 'chai'\nimport chaiHttp from 'chai-http'\nimport { dropDb } from './helpers'\nimport app from '../src/server'\nimport { signToken } from '../src/api/modules/auth'\nimport { User } from '../src/api/resources/user/user.model'\n\nchai.use(chaiHttp)\n\nconst createApiSpec = (model, resourceName, newResource) => {\n  describe(`/${resourceName}`, () => {\n    let jwt\n\n    beforeEach(async () => {\n      await dropDb()\n      const user = await User.create({username: 'stu1', passwordHash: '123'})\n      jwt = signToken(user.id)\n    })\n\n    afterEach(async () => {\n      await dropDb()\n    })\n\n    describe(`GET /${resourceName}`, () => {\n      it(`should get all ${resourceName}`, async () => {\n        const result = await chai.request(app)\n          .get(`/api/${resourceName}`)\n          .set('Authorization', `Bearer ${jwt}`)\n\n        expect(result).to.have.status(200)\n        expect(result).to.be.json\n      })\n    })\n\n    describe(`POST /${resourceName}`, () => {\n      it(`should create a ${resourceName}`, async () => {\n        const result = await chai.request(app)\n          .post(`/api/${resourceName}`)\n          .set('Authorization', `Bearer ${jwt}`)\n          .send(newResource)\n\n        expect(result).to.have.status(201)\n        expect(result).to.be.json\n      })\n    })\n  })\n}\n\nexport default createApiSpec\n\n\n\n// WEBPACK FOOTER //\n// test/apiSpecs.js","module.exports = require(\"chai\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"chai\"\n// module id = 10\n// module chunks = 0","import '../src/api/resources/user/user.model'\nimport '../src/api/resources/playlist/playlist.model'\nimport '../src/api/resources/song/song.model'\nimport mongoose from 'mongoose'\n\nmongoose.Promise = global.Promise\n\nexport const removeModel = (modelName) => {\n  const model = mongoose.model(modelName)\n  return new Promise((resolve, reject) => {\n    if (!model) {\n      return resolve()\n    }\n    model.remove((err) => {\n      if (err) {\n        reject(err)\n      } else {\n        resolve()\n      }\n    })\n  })\n}\n\nexport const dropDb = () => {\n  return mongoose.connect('mongodb://localhost/jams-test', {\n    useMongoClient: true\n  })\n    .then(() => Promise.all(mongoose.modelNames().map(removeModel)))\n}\n\n\n\n// WEBPACK FOOTER //\n// test/helpers.js","import { User } from '../resources/user/user.model'\nimport jwt from 'jsonwebtoken'\nimport expressJwt from 'express-jwt'\nconst jwtSecret = 'blueRhinoJumps'\n\nconst checkToken = expressJwt({ secret: jwtSecret })\nconst disableAuth = false\n\nexport const signin = (req, res, next) => {\n  // req.user will be there from the middleware\n  // verify user. Then we can just create a token\n  // and send it back for the client to consume\n  const token = signToken(req.user.id)\n  res.json({token: token})\n}\n\nexport const decodeToken = () => (req, res, next) => {\n  if (disableAuth) {\n    return next()\n  }\n  // make it optional to place token on query string\n  // if it is, place it on the headers where it should be\n  // so checkToken can see it. See follow the 'Bearer 034930493' format\n  // so checkToken can see it and decode it\n  if (req.query && req.query.hasOwnProperty('access_token')) {\n    req.headers.authorization = 'Bearer ' + req.query.access_token\n  }\n\n  // this will call next if token is valid\n  // and send error if its not. It will attached\n  // the decoded token to req.user\n  checkToken(req, res, next)\n}\n\nexport const getFreshUser = () => (req, res, next) => {\n  return User.findById(req.user.id)\n    .then(function(user) {\n      if (!user) {\n        // if no user is found it was not\n        // it was a valid JWT but didn't decode\n        // to a real user in our DB. Either the user was deleted\n        // since the client got the JWT, or\n        // it was a JWT from some other source\n        res.status(401).send('Unauthorized')\n      } else {\n        // update req.user with fresh user from\n        // stale token data\n        req.user = user\n        next()\n      }\n    })\n    .catch(error => next(error))\n}\n\nexport const verifyUser = () => (req, res, next) => {\n  const username = req.body.username\n  const password = req.body.password\n\n  // if no username or password then send\n  if (!username || !password) {\n    res.status(400).send('You need a username and password')\n    return\n  }\n\n  // look user up in the DB so we can check\n  // if the passwords match for the username\n  User.findOne({username: username})\n    .then(function(user) {\n      if (!user) {\n        res.status(401).send('No user with the given username')\n      } else {\n        // checking the passowords here\n        if (!user.authenticate(password)) {\n          res.status(401).send('Wrong password')\n        } else {\n          // if everything is good,\n          // then attach to req.user\n          // and call next so the controller\n          // can sign a token from the req.user._id\n          req.user = user;\n          next()\n        }\n      }\n    })\n    .catch(error => next(err))\n}\n\nexport const signToken = (id) => jwt.sign(\n  {id},\n  jwtSecret,\n  {expiresIn: '30d'}\n)\n\nexport const protect = [decodeToken(), getFreshUser()]\n\n\n\n// WEBPACK FOOTER //\n// src/api/modules/auth.js","\n    var testsContext = require.context(\"../../src\", false);\n\n    var runnable = testsContext.keys();\n\n    runnable.forEach(testsContext);\n    \n\n\n// WEBPACK FOOTER //\n// .tmp/mocha-webpack/58d6c355fbc7f94d64aab590c5a030a8-entry.js","var map = {\n\t\"./api/modules/query.spec.js\": 15,\n\t\"./api/resources/playlist/playlist.spec.js\": 18,\n\t\"./api/resources/song/song.spec.js\": 38,\n\t\"./api/resources/user/user.spec.js\": 39\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 14;\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/bronx/Desktop/NodePractice/api-design-node-v2/src object Object\n// module id = 14\n// module chunks = 0","import { expect } from 'chai'\nimport { dropDb } from '~/testhelpers'\nimport { controllers } from './query'\nimport { User } from '../resources/user/user.model'\n\ndescribe('Modules', () => {\n  beforeEach(async () => {\n    await dropDb()\n  })\n\n  afterEach(async () => {\n    await dropDb()\n  })\n\n  describe('query', () => {\n    describe('createOne', () => {\n      it('should create a document', async () => {\n        const result = await controllers.createOne(User, {\n          username: 'student12',\n          passwordHash: '1234abcd'\n        })\n        expect(result).to.be.ok\n        expect(result.id).to.be.ok\n        expect(result.username).to.equal('student12')\n      })\n    })\n    describe('updateOne', () => {\n      it('should update a document', async () => {\n        const user = await controllers.createOne(User, {\n          username: 'studentx',\n          passwordHash: '1234sdkfj'\n        })\n\n        const newUsername = 'newStudentZ'\n        const updatedUser = await controllers.updateOne(user, {username: newUsername})\n\n        expect(updatedUser.username).to.equal(newUsername)\n        expect(updatedUser.id).to.equal(user.id)\n      })\n    })\n\n    describe('deleteOne', () => {\n      it('should delete a document', async () => {\n        const user = await controllers.createOne(User, {\n          username: 'studentx',\n          passwordHash: '1234sdkfj'\n        })\n\n        const deletedUser = await controllers.deleteOne(user)\n\n        expect(deletedUser.id).to.equal(user.id)\n        expect(await User.findById(user.id)).to.equal(null)\n      })\n    })\n\n    describe('getOne', () => {\n      it('should get one document', async () => {\n        const user = await controllers.createOne(User, {\n          username: 'studentx',\n          passwordHash: '1234sdkfj'\n        })\n\n        const foundUser = await controllers.getOne(user)\n\n        expect(foundUser).to.equal(user)\n      })\n    })\n\n    describe('getAll', () => {\n      it('should get all documnets', async () => {\n        const usernames = ['student1', 'student2']\n\n        const users = await Promise.all(usernames.map(async username => {\n          const user = await controllers.createOne(User, {username, passwordHash: '1234qwer'})\n          return user.toJSON()\n        }))\n\n        const allUsers = (await controllers.getAll(User))\n          .map(user => user.toJSON())\n\n        expect(allUsers).to.have.length(users.length)\n      })\n    })\n\n    describe('findByParam', () => {\n      it('should find model my id', async () => {\n        const user = (await controllers.createOne(User, {\n          username: 'student1',\n          passwordHash: '1234qwe'\n        }))\n          .toJSON()\n\n        const foundUser = (await controllers.findByParam(User, user._id))\n          .toJSON()\n\n        expect(foundUser).to.deep.eql(user)\n      })\n    })\n  })\n})\n\n\n\n// WEBPACK FOOTER //\n// src/api/modules/query.spec.js","module.exports = require(\"babel-runtime/helpers/extends\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/helpers/extends\"\n// module id = 16\n// module chunks = 0","module.exports = require(\"lodash.merge\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash.merge\"\n// module id = 17\n// module chunks = 0","import createApiSpec from '~/apiSpecs'\nimport { Playlist } from './playlist.model'\n\ncreateApiSpec(\n  Playlist,\n  'playlist',\n  {title: 'study jams', favorite: true}\n)\n\n\n\n// WEBPACK FOOTER //\n// src/api/resources/playlist/playlist.spec.js","module.exports = require(\"chai-http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"chai-http\"\n// module id = 19\n// module chunks = 0","import express from 'express'\nimport setupMiddware from './middleware'\nimport { restRouter } from './api'\nimport { connect } from './db'\nimport { signin, protect } from './api/modules/auth'\n// Declare an app from express\nconst app = express()\n\nsetupMiddware(app)\nconnect()\n// setup basic routing for index route\n\napp.use('/signin', signin)\napp.use('/api', protect, restRouter)\n// catch all\napp.all('*', (req, res) => {\n  res.json({ok: true})\n})\n\nexport default app\n\n\n\n// WEBPACK FOOTER //\n// src/server.js","import bodyParser from 'body-parser'\n\nconst setGlobalMiddleware = (app) => {\n  app.use(bodyParser.urlencoded({extended: true}))\n  app.use(bodyParser.json())\n}\n\nexport default setGlobalMiddleware\n\n\n\n// WEBPACK FOOTER //\n// src/middleware.js","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 22\n// module chunks = 0","export { restRouter } from './restRouter'\n\n\n\n// WEBPACK FOOTER //\n// src/api/index.js","import express from 'express'\nimport { userRouter } from './resources/user'\nimport { songRouter } from './resources/song'\nimport { playlistRouter } from './resources/playlist'\nimport { apiErrorHandler } from './modules/errorHandler'\n\nexport const restRouter = express.Router()\n\nrestRouter.use('/user', userRouter)\nrestRouter.use('/song', songRouter)\nrestRouter.use('/playlist', playlistRouter)\nrestRouter.use(apiErrorHandler)\n\n\n\n// WEBPACK FOOTER //\n// src/api/restRouter.js","export * from './user.restRouter'\n\n\n\n// WEBPACK FOOTER //\n// src/api/resources/user/index.js","import express from 'express'\nimport userController from './user.controller'\n\nexport const userRouter = express.Router()\n\nuserRouter.param('id', userController.findByParam)\n\nuserRouter.route('/')\n  .get(userController.getAll)\n  .post(userController.createOne)\n\nuserRouter.route('/:id')\n  .get(userController.getOne)\n  .put(userController.updateOne)\n  .delete(userController.createOne)\n\n\n\n// WEBPACK FOOTER //\n// src/api/resources/user/user.restRouter.js","import { generateControllers } from '../../modules/query'\nimport { User } from './user.model'\n\nexport default generateControllers(User)\n\n\n\n// WEBPACK FOOTER //\n// src/api/resources/user/user.controller.js","export * from './song.restRouter'\n\n\n\n// WEBPACK FOOTER //\n// src/api/resources/song/index.js","import express from 'express'\nimport songController from './song.controller'\n\nexport const songRouter = express.Router()\n\nsongRouter.param('id', songController.findByParam)\n\nsongRouter.route('/')\n  .get(songController.getAll)\n  .post(songController.createOne)\n\nsongRouter.route('/:id')\n  .get(songController.getOne)\n  .put(songController.updateOne)\n  .delete(songController.createOne)\n\n\n\n// WEBPACK FOOTER //\n// src/api/resources/song/song.restRouter.js","import { generateControllers } from '../../modules/query'\nimport { Song } from './song.model'\n\nexport default generateControllers(Song)\n\n\n\n// WEBPACK FOOTER //\n// src/api/resources/song/song.controller.js","export * from './playlist.restRouter'\n\n\n\n// WEBPACK FOOTER //\n// src/api/resources/playlist/index.js","import express from 'express'\nimport playlistController from './playlist.controller'\n\nexport const playlistRouter = express.Router()\n\nplaylistRouter.param('id', playlistController.findByParam)\n\nplaylistRouter.route('/')\n  .get(playlistController.getAll)\n  .post(playlistController.createOne)\n\nplaylistRouter.route('/:id')\n  .get(playlistController.getOne)\n  .put(playlistController.updateOne)\n  .delete(playlistController.createOne)\n\n\n\n// WEBPACK FOOTER //\n// src/api/resources/playlist/playlist.restRouter.js","import { generateControllers } from '../../modules/query'\nimport { Playlist } from './playlist.model'\n\nexport default generateControllers(Playlist)\n\n\n\n// WEBPACK FOOTER //\n// src/api/resources/playlist/playlist.controller.js","export const apiErrorHandler = (error, req, res, next) => {\n  console.error(error.stack)\n  res.status(500).send(error.message || error.toString())\n}\n\n\n\n// WEBPACK FOOTER //\n// src/api/modules/errorHandler.js","import mongoose from 'mongoose'\nmongoose.Promise = global.Promise\n\nexport const connect = () => {\n  return mongoose.connect('mongodb://localhost/jams', {\n    useMongoClient: true\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// src/db.js","module.exports = require(\"jsonwebtoken\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jsonwebtoken\"\n// module id = 36\n// module chunks = 0","module.exports = require(\"express-jwt\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-jwt\"\n// module id = 37\n// module chunks = 0","import createApiSpec from '~/apiSpecs'\nimport { Song } from './song.model'\n\ncreateApiSpec(\n  Song,\n  'song',\n  {title: 'downtown jamming', url: 'http://music.mp3'}\n)\n\n\n\n// WEBPACK FOOTER //\n// src/api/resources/song/song.spec.js","import createApiSpec from '~/apiSpecs'\nimport { User } from './user.model'\n\ncreateApiSpec(User, 'user', {username: 'stu', passwordHash: '1223saf'})\n\n\n\n// WEBPACK FOOTER //\n// src/api/resources/user/user.spec.js"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC7DA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AANA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAaA;;;;;;AC5BA;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAxBA;AACA;AA0BA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAKA;AAAA;AACA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAJA;AACA;AAKA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAJA;AACA;AAKA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAJA;AACA;AAKA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAbA;AACA;AAeA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AClHA;;;;;;ACAA;;;;;;ACAA;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AAXA;AACA;AAiBA;;;;;;;ACpBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AAHA;AAvBA;AACA;AA6BA;;;;;;;;;;;;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AAEA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AAGA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;;;;;;AChDA;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AACA;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AACA;AAiBA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAlBA;AACA;AAmBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AA/BA;AACA;AAgCA;AAAA;AAAA;AACA;AAKA;;;;;;;AC5FA;AACA;AACA;AACA;AACA;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AACA;AAFA;AACA;AACA;AAGA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AACA;AAFA;AACA;AAKA;AANA;AAAA;AACA;AADA;AAOA;AACA;AACA;AAAA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AACA;AAFA;AACA;AADA;AAAA;AACA;AADA;AAMA;AACA;AACA;AAAA;AARA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AACA;AAFA;AACA;AADA;AAAA;AACA;AADA;AAMA;AACA;AACA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAJA;AAGA;AAHA;AAAA;AACA;AADA;AAAA;AASA;AAAA;AACA;AAFA;AACA;AACA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AACA;AAFA;AACA;AADA;AAAA;AACA;AADA;AAOA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;;;;;;ACnGA;;;;;;ACAA;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;ACHA;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACPA;;;;;;;ACAA;AAAA;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACXA;AAAA;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;ACXA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;ACHA;AAAA;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;ACXA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;ACHA;AAAA;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;ACXA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;ACHA;AAAA;AACA;AACA;AACA;;;;;;;ACHA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;;;;;;ACPA;;;;;;ACAA;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;ACHA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;A","sourceRoot":""}